-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
RollBack;
BEGIN;

CREATE SEQUENCE users_id_seq;
CREATE SEQUENCE tags_id_seq;
CREATE SEQUENCE provinces_id_seq;
CREATE SEQUENCE events_id_seq;
CREATE SEQUENCE locations_id_seq;
CREATE SEQUENCE event_tags_id_seq;
CREATE SEQUENCE event_locations_id_seq;
CREATE SEQUENCE event_enrollments_id_seq;
CREATE SEQUENCE event_categories_id_seq;

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    username text COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public.tags
(
    id integer NOT NULL DEFAULT nextval('tags_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT tags_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.provinces
(
    id integer NOT NULL DEFAULT nextval('provinces_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    full_name character varying COLLATE pg_catalog."default",
    latitude numeric,
    longitude numeric,
    display_order integer,
    CONSTRAINT provinces_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.locations
(
    id integer NOT NULL DEFAULT nextval('locations_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    id_province integer NOT NULL,
    latitude numeric,
    longitude numeric,
    CONSTRAINT locations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.events
(
    id integer NOT NULL DEFAULT nextval('events_id_seq'::regclass),
    name text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    id_event_category integer,
    id_event_location integer NOT NULL,
    start_date time with time zone,
    duration_in_minutes integer,
    price integer,
    enabled_for_enrollment boolean,
    max_assistance integer,
    id_creator_user integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_tags
(
    id integer NOT NULL DEFAULT nextval('event_tags_id_seq'::regclass),
    id_event integer NOT NULL,
    id_tag integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_locations
(
    id integer NOT NULL DEFAULT nextval('event_locations_id_seq'::regclass),
    id_location integer NOT NULL,
    name character varying COLLATE pg_catalog."default",
    full_address character varying COLLATE pg_catalog."default",
    max_capacity character varying COLLATE pg_catalog."default",
    latitude numeric,
    longitude numeric,
    id_creator_user integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_enrollments
(
    id integer NOT NULL DEFAULT nextval('event_enrollments_id_seq'::regclass),
    id_event integer NOT NULL,
    id_user integer,
    description text COLLATE pg_catalog."default",
    registration_date_time time with time zone,
    attended boolean,
    observations text COLLATE pg_catalog."default",
    rating integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_categories
(
    id integer NOT NULL DEFAULT nextval('event_categories_id_seq'::regclass),
    name character varying COLLATE pg_catalog."default",
    display_order integer,
    CONSTRAINT event_categories_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.locations
    ADD CONSTRAINT fk_locations_provinces FOREIGN KEY (id_province)
    REFERENCES public.provinces (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.events
    ADD CONSTRAINT fk_events_users FOREIGN KEY (id_creator_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.events
    ADD CONSTRAINT fk_events_ecategory FOREIGN KEY (id_event_category)
    REFERENCES public.event_categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_tags
    ADD CONSTRAINT fk_etags_tags FOREIGN KEY (id_tag)
    REFERENCES public.tags (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_locations
    ADD CONSTRAINT fk_elocations_locations FOREIGN KEY (id_location)
    REFERENCES public.locations (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.event_enrollments
    ADD CONSTRAINT fk_enrollments_users FOREIGN KEY (id_user)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;